$gradientRed: #DE5543;
$gradientPeach: #FFC4BC;
$gradientOrange: #E68E60;
@import "_reset.scss";

.ctaButton {
  width: 100vw;
  height: 8vw;
  background: linear-gradient(90deg, $gradientRed 0%, $gradientOrange 75%, $gradientPeach 100%);
  color: #FFFFFF;
  border-radius: 30vw;
  border-style: none;
}

.categoryButton {
  width: 30vw;
  height: 8vw;
  background: linear-gradient(90deg, $gradientRed 0%, $gradientOrange 75%, $gradientPeach 100%);
  color: #FFFFFF;
  border-radius: 30vw;
  border-style: none;
}

.topBar {
  display: grid;
  grid-template-columns: 25% auto 25%;
  width: 100vw;
  height: 10vh;

  & > div {
    margin: auto;
  }

  & > .returnButton {
    display: block;
    width: 30px;
    height: 30px;

    & > .returnArrow {
      position: relative;
      top: 50%;
      left: 50%;
      width: 50%;
      transform: translate(-50%, -50%) rotate(135deg);
      height: 50%;
      border: solid #000;
      border-width: 0 3px 3px 0;
      padding: 3px;
    }
  }

  & > h1 {
    color: #000;
    margin: auto;
  }

  & > .addEvent {
    display: block;
    width: 30px;
    height: 30px;

    & > .lineVertical {
      position: relative;
      top: 50%;
      transform: translateY(-50%);
      width: 100%;
      height: 3px;
      background-color: #000;
    }

    & > .lineHorizontal {
      position: relative;
      left: 50%;
      top: -3px;
      transform: translateX(-50%);
      width: 3px;
      height: 100%;
      background: #000;
    }
  }
}

// https://css-tricks.com/can-get-pretty-far-making-slider-just-html-css/
.categorySlider {
  display: flex;
  width: 100vw;
  height: 10vh;
  overflow-x: auto;
  // Smooth scroll for mobile
  -webkit-overflow-scrolling: touch;
  // Makes the elements "snap" to a position
  scroll-snap-type: x mandatory;

  & > .categoryItem {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-shrink: 0;
    width: 25%;
    height: 70%;
    margin: auto 10px;
    background: #F2F2F2;
    color: #000;
    border-radius: 30vw;
    border-style: none;
    text-align: center;
    scroll-snap-align: center;

    // Why can't this be inside here?
    // & > .active {
    //  background: linear-gradient(90deg, $gradientRed 0%, $gradientOrange 75%, $gradientPeach 100%) !important;
    //  color: #FFF !important;
    // }

    & > p {
      margin: auto;
    }
  }
}

// Instead it has to be outside? Also why does it need the important tag?
.active {
 background: linear-gradient(90deg, $gradientRed 0%, $gradientOrange 75%, $gradientPeach 100%) !important;
 color: #FFF !important;
}

// Hides the scrollbar
::-webkit-scrollbar {
    width: 0px;  /* Remove scrollbar space */
    background: transparent;  /* Optional: just make scrollbar invisible */
}

.eventFeed {
  display: grid;
  margin: 10px;

  & > .eventItem {
    display: block;
    height: 30vh;
    margin: 10px;
    border-radius: 20px;
    background-size: cover;
  }
}

.eventDetailsFilter {
  position: relative;
  width: 100%;
  height: 30%;
  bottom: -70%;
}

.eventDetailsFilter::before {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 2% 1% 0 1%;
  transform: translate(-2%, -2%);
  border-radius: 20px;
  top: 0;
  left: 0;
  background: #FFF;
  filter: opacity(80%) blur(10px);
  content: "";
}

.eventDetails {
  position: relative;
  display: grid;
  grid-template-areas:
    'header header'
    'date location';
  grid-column-gap: 10px;
  grid-row-gap: 5px;
  width: 100%;
  height: 100%;
  padding: 5px 15px 5px 15px;

  & > h2 {
    grid-area: header;
    // Makes sure the text is centered inside the grid slot on long screens. No idea when you'd see this, but better safe than sorry.
    margin: auto 0 auto 0;
  }

  & > .eventDate {
    grid-area: date;
    margin: auto 0 auto 0;
  }

  & > .eventLocation {
    grid-area: location;
    text-align: right;
    margin: auto 0 auto 0;
  }
}

.footerBar {
  display: grid;
  grid-template-columns: auto auto;
  grid-column-gap: 15px;
  width: 100vw;
  padding: 10px;
  background-color: #D6D6D6;
}
